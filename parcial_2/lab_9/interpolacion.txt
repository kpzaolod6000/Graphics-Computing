INTERPOLACIÓN DE ATRIBUTOS VERTEX
Es importante comprender cómo se procesan los atributos de vértice en la canalización de OpenGL, en comparación con cómo se procesan las variables uniformes. Recuerde que inmediatamente antes del sombreador de fragmentos está la rasterización, donde las primitivas (por ejemplo, triángulos) definidos por vértices se convierten en fragmentos. La rasterización interpola linealmente los valores de los atributos de vértice para que los píxeles mostrados conecten perfectamente las superficies modeladas.
Por el contrario, las variables uniformes se comportan como constantes inicializadas y permanecen sin cambios en cada invocación del sombreador de vértices (es decir, para cada vértice enviado desde el búfer). No se interpola una variable uniforme; siempre contiene el mismo valor independientemente del número de vértices.
La interpolación realizada en los atributos de vértice por el rasterizador es útil de muchas formas. Más adelante, usaremos la rasterización para interpolar colores, coordenadas de textura y normales de superficie. Es importante comprender que todos los valores enviados a través de un búfer a un atributo de vértice se interpolarán más adelante en la tubería.
Hemos visto atributos de vértice en un sombreador de vértices declarados como "in" para indicar que reciben valores de un búfer. En cambio, los atributos de vértice pueden declararse como "fuera", lo que significa que envían sus valores hacia la siguiente etapa del proceso. Por ejemplo, la siguiente declaración en un sombreador de vértices especifica un atributo de vértice llamado "color" que genera un vec4:
color vec4;
No es necesario declarar una variable "out" para las posiciones de los vértices, porque OpenGL tiene una variable vec4 out incorporada llamada gl_Position para ese propósito. En el sombreador de vértices, aplicamos las transformaciones matriciales al vértice entrante (declarado anteriormente como posición), asignando el resultado a gl_Position

gl_Position = proj_matrix * mv_matrix * posición;

Los vértices transformados se enviarán automáticamente al rasterizador, y las ubicaciones de píxeles correspondientes se enviarán finalmente al sombreador de fragmentos.
El proceso de rasterización se ilustra en la Figura 4.2. Al especificar GL_TRIANGLES en la función glDrawArrays (), la rasterización se realiza por triángulo. La interpolación comienza a lo largo de las líneas que conectan los vértices, con un nivel de precisión correspondiente a la densidad de visualización de píxeles. Los píxeles en el espacio interior del triángulo se rellenan interpolando a lo largo de las líneas horizontales que conectan los píxeles del borde. 